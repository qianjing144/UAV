C251 COMPILER V5.60.0,  LPS22HH                                                            10/08/24  08:39:09  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE LPS22HH
OBJECT MODULE PLACED IN .\Objects\LPS22HH.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Code\LPS22HH.c XSMALL ROM(HUGE) BROWSE INCDIR(.\Code;.\Debugware) DEBU
                    -G PRINT(.\Listings\LPS22HH.lst) OBJECT(.\Objects\LPS22HH.obj) 

stmt  level    source

    1          #include <intrins.h>
    2          #include <math.h>
    3          #include "LPS22HH.h"
    4          #include "i2c.h"
    5          #include "UART.h"
    6          #include "main.h"
    7          #include "oled.h"
    8          
    9          #define INTERRUPT_CFG 0x0B
   10          #define THS_P_L 0x0C
   11          #define THS_P_H 0x0D
   12          #define IF_CTRL 0x0E
   13          #define WHO_AM_I 0x0F
   14          #define CTRL_REGn 0x10//3Byte
   15          #define RESET 0x11//CTRL_REG2
   16          #define FIFO_WTM 0x14
   17          #define REF_P_L 0x15
   18          #define REF_P_H 0x16
   19          #define RPDS_L 0x18
   20          #define RPDS_H 0x19
   21          #define INT_SOURCE 0x24
   22          #define FIFO_STATUSn 0x25//2Byte
   23          #define STATUS 0x27
   24          #define PRESS_OUTn 0X28//3Byte XL L H
   25          #define TEMP_OUTn 0x2B//2Byte L H
   26          #define FIFO_DATA_OUT_PRESSn 0x78//3Byte Xl L H
   27          #define FIFO_DATA_OUT_TEMPn 0x7B//2Byte L H
   28          
   29          #define SET_INTERRUPT_CFG 0x00//0000 0000
   30          #define SET_IF_CTRL 0x02//0000 0010
   31          #define SET_CTRL_REG1 0x7E//0111 1110
   32          #define SET_CTRL_REG2 0x90//1001 0000
   33          #define RESET_OP 0x04//0000 0100 复位
   34          #define SET_CRTL_REG3 0x04//0000 0000
   35          
   36          
   37          
   38          //float prs=0.0f;//hPa
   39          //float tmp=0.0f;//℃
   40          //float alt=0.0f;//m
   41          
   42          static void delayxms(unsigned long xms) //@11.0592MHz
   43          {
   44   1              unsigned long edata i;
   45   1              unsigned char j=0;
   46   1              while(xms--)
   47   1              {
   48   2                      for(j=0;j<13;j++)
   49   2                      {
   50   3                              _nop_();
   51   3                              _nop_();
   52   3                              i = 2763UL;
   53   3                              while (i) i--;
   54   3                      }
   55   2              }
   56   1      }
   57          
   58          static unsigned char write_reg(unsigned char devAddr,unsigned char reg,unsigned char *pData, unsigned cha
C251 COMPILER V5.60.0,  LPS22HH                                                            10/08/24  08:39:09  PAGE 2   

             -r amount)
   59          {
   60   1      //      if(i2c_mem_write(devAddr,reg,pData,amount)!=I2C_OK) {
   61   1      //              return 1;
   62   1      //      }
   63   1      //      return 0;
   64   1              
   65   1              if(i2c_mem_write(devAddr,reg,pData,amount))
   66   1              {
   67   2                      return 1;
   68   2              }
   69   1              return 0;
   70   1      }
   71          static unsigned char read_reg(unsigned char devAddr,unsigned char reg,unsigned char *pData, unsigned char
             - amount)
   72          {
   73   1      //      if(i2c_mem_read(devAddr, reg, pData, amount)!=I2C_OK) {
   74   1      //              return 1;
   75   1      //      }
   76   1      //      return 0;
   77   1              if(i2c_mem_read(devAddr,reg,pData,amount))
   78   1              {
   79   2                      return 1;
   80   2              }
   81   1              return 0;
   82   1      }
   83          
   84          void lps22hh_reset(LPS22HH_t* obj)
   85          {
   86   1              unsigned char cmd=0x00; 
   87   1              cmd=RESET_OP;
   88   1              write_reg(obj->devAddr,RESET,&cmd,1);
   89   1      }
   90          
   91          
   92          unsigned char lps22hh_init(LPS22HH_t* obj)
   93          {
   94   1              unsigned char cmd[3]={0};
   95   1              if(read_reg(obj->devAddr, WHO_AM_I, cmd, 1))
   96   1              {
   97   2                      return 1;
   98   2              }
   99   1              
  100   1              if(cmd[0]!=0xB3)
  101   1              {
  102   2                      return 1;
  103   2              }
  104   1              
  105   1              lps22hh_reset(obj);
  106   1              cmd[0]=SET_IF_CTRL;
  107   1              if(write_reg(obj->devAddr,IF_CTRL, cmd, 1))//设置IF_CTRL
  108   1              {
  109   2                      return 1;
  110   2              }
  111   1              
  112   1              cmd[0]=SET_CTRL_REG1;
  113   1              cmd[1]=SET_CTRL_REG2;
  114   1              cmd[2]=SET_CRTL_REG3;
  115   1              if(write_reg(obj->devAddr,CTRL_REGn,cmd,3))//设置CTRL_REGn
  116   1              {
  117   2                      return 1;
  118   2              }
  119   1              for(;;) {
  120   2                      if(read_reg(obj->devAddr,INT_SOURCE, cmd, 1))
  121   2                      {
  122   3                              return 1;
C251 COMPILER V5.60.0,  LPS22HH                                                            10/08/24  08:39:09  PAGE 3   

  123   3                      }
  124   2                      if((cmd[0]&0x80)==0x00) {//检查是否启动完成 0x00启动完成 0x80正在启动
  125   3                              break;
  126   3                      }
  127   2              }
  128   1              return 0;
  129   1      }
  130          
  131          unsigned char lps22hh_get_tmp(LPS22HH_t* obj,float *tmp)
  132          {
  133   1              unsigned char cmd=0x00; 
  134   1              unsigned char buf[2]={0};
  135   1              unsigned int raw=0;
  136   1              if(read_reg(obj->devAddr,STATUS, &cmd, 1))
  137   1              {
  138   2                      return 1;
  139   2              }
  140   1              if((cmd&0x22)!=0x22)  //0010 0010
  141   1              {
  142   2                      return 1;
  143   2              }
  144   1              if(read_reg(obj->devAddr,TEMP_OUTn, buf, 2))
  145   1              {
  146   2                      return 1;
  147   2              }
  148   1              *tmp=((int)buf[1]<<8 | buf[0])/100.0;
  149   1              return 0;
  150   1      }
  151          
  152          unsigned char lps22hh_get_prs(LPS22HH_t* obj,float *prs)
  153          {
  154   1              unsigned char buf[3]={0};
  155   1              unsigned char cmd=0x00; 
  156   1              if(read_reg(obj->devAddr,STATUS, &cmd, 1))
  157   1              {
  158   2                      return 1;
  159   2              }
  160   1              if((cmd&0x11)!=0x11) { //0001 0001
  161   2                      return 1;
  162   2              }
  163   1              if(read_reg(obj->devAddr,PRESS_OUTn, buf, 3))
  164   1              {
  165   2                      return 1;
  166   2              }
  167   1              *prs=((long)buf[2]<<16|(int)buf[1]<<8|buf[0])/4096.0;
  168   1              return 0;
  169   1      }
  170          
  171          unsigned char lps22hh_get_alt(LPS22HH_t* obj,float *alt)
  172          {
  173   1              float prs=0;
  174   1              float tmp=0;
  175   1              unsigned char cmd=0x00; 
  176   1              unsigned char buf[5]={0};
  177   1              
  178   1              if(read_reg(obj->devAddr,STATUS,&cmd,1))
  179   1              {
  180   2                      return 1;
  181   2              }
  182   1              
  183   1              if((cmd&0x33)!=0x33)
  184   1              {
  185   2                      return 1;
  186   2              }
  187   1              
  188   1      //      delayxms(10);
C251 COMPILER V5.60.0,  LPS22HH                                                            10/08/24  08:39:09  PAGE 4   

  189   1              if(read_reg(obj->devAddr,PRESS_OUTn, buf, 5))
  190   1              {
  191   2                      return 1;
  192   2              }
  193   1              
  194   1              prs=((long)buf[2]<<16|(int)buf[1]<<8|buf[0])/4096.0;
  195   1              tmp=((int)buf[1]<<8|buf[0])/100.0;
  196   1              *alt=(((pow(1013.25/prs,1/5.257))-1)*(tmp+273.15))/0.0065;
  197   1              return 0;
  198   1      }
*** WARNING C174 IN LINE 42 OF Code\LPS22HH.c: 'delayxms': unreferenced 'static' function


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       809     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------         29
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        13     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
